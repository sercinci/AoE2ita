{% extends "layout.html.twig" %}

{% block title %}{{tournament.title}} - AoE2ita{% endblock %}
{% block meta %}

{% endblock %}
{% block content %}
    {% include 'menu.html.twig' %}
    <h1>{{tournament.title}}</h1>  
    <pre>{{ tournament | json_encode() }}</pre>
    <br>
    <pre>{{ joined | json_encode() }}</pre>
    <div>
        {{ tournament.description | raw }}
    </div>
    <br>
    {% if tournament.status == 'pending' %}
        {% if ready and tournament.user_id == user.id %}
            <button onclick="startTournament({{tournament.id}}); this.disabled=true; this.innerHTML='Avviando...';">Avvia torneo</button>
        {% endif %}
        {% if tournament.random_team == 1 %}
            {% if joined %}
                <span>Sei iscritto a questo torneo</span>
            {% else %}
                <button onclick="joinRandomTeam({{tournament.id}}); this.disabled=true; this.innerHTML='Entrando...';"><span>Partecipa</span></button>
            {% endif %}
        {% else %}
            {% for team in tournament.teams %}
                {% if joined or team.members_count == tournament.team_members %}
                    <span>{{ team.title }}</span><br>
                {% else %}
                    <button onclick="joinTeam({{tournament.id}},{{team.id}}); this.disabled=true; this.innerHTML='Entrando in {{ team.title }}';"><span>{{ team.title }}</span></button><br>
                {% endif %}
                {% for member in team.members %}
                    <span>- {{ member.username }} - {% if tournament.rank == 'RM' %}{{ member.mmr_rm }}{% endif %}{% if tournament.rank == 'DM' %}{{ member.mmr_dm }}{% endif %}</span><br>
                {% endfor %}
            {% endfor %}
           
        {% endif %}
    {% endif %}

    {% if tournament.status == 'underway' %}
        {% for team in tournament.teams %}
            <span>{{ team.title }}</span><br>
            {% for member in team.members %}
                <span>- {{ member.username }} - {% if tournament.rank == 'RM' %}{{ member.mmr_rm }}{% endif %}{% if tournament.rank == 'DM' %}{{ member.mmr_dm }}{% endif %}</span><br>
            {% endfor %}
        {% endfor %}
        <pre>{{ matches | json_encode() }}</pre>
    {% endif %}
    <br>
    <pre>{{ api | json_encode() }}</pre>
    <p>State: pending (preparazione), underway (in corso)</p>
    <br>
    {% if tournament.user_id == user.id %}
        <button onclick="deleteTournament({{tournament.id}}); this.disabled=true; this.innerHTML='Eliminando...';" class="pure-button">Elimina torneo</button>
    {% endif %}
    {% include 'footer.html.twig' %}
{% endblock %}
{% block javascript %}
    {{ parent() }}
    <script type="text/javascript">
    function joinTeam(tId, teamId) {
        var buttons = document.getElementsByTagName('button');
        for (var i = 0; i < buttons.length; i++) {
            buttons[i].disabled = true; //da vedere quando grafichiamo se rimane un button
        }
      fetch('/tournaments/'+tId+'/team/'+teamId, {
        method: 'PUT',
        //body: new FormData(form),
        credentials: 'same-origin'
      }).then(function(response) {
        console.log(response)
        if (response.ok) {
          location.reload();
        } else {
          throw new Error(response.statusText);
        }
      }).catch(function(error) {
        console.log('request failed', error)
      })
    }

    function joinRandomTeam(tId) {
      fetch('/tournaments/'+tId+'/randomteam', {
        method: 'PUT',
        //body: new FormData(form),
        credentials: 'same-origin'
      }).then(function(response) {
        console.log(response)
        if (response.ok) {
          location.reload();
        } else {
          throw new Error(response.statusText);
        }
      }).catch(function(error) {
        console.log('request failed', error)
      })
    }

    function startTournament(tId) {
      fetch('/tournaments/'+tId+'/start', {
        method: 'POST',
        //body: new FormData(form),
        credentials: 'same-origin'
      }).then(function(response) {
        console.log(response)
        if (response.ok) {
          location.reload();
        } else {
          throw new Error(response.statusText);
        }
      }).catch(function(error) {
        console.log('request failed', error)
      })
    }

    function deleteTournament(tId) {
      fetch('/tournaments/'+tId+'/delete', {
        method: 'DELETE',
        //body: new FormData(form),
        credentials: 'same-origin'
      }).then(function(response) {
        //console.log(response)
        if (response.ok) {
          location.href = '/tournaments';
        } else {
          throw new Error(response.statusText);
        }
      }).catch(function(error) {
        console.log('request failed', error)
      })
    }
    </script>
{% endblock %}